CIS*4650 (Winter 2024) - Marking Scheme for Checkpoint Two
Group

Questions
Documentation (20)
Symbol Tables: (35)
1. Hash tables
2. Simple vars (int, bool, void)
3. Array variables
4. Functions/Blocks
-entry and exit
5. Errors: undefined/redefined
Type-Checking: (40)
1. array range/index are int
2. two sides of an assignment
3. two sides of an operation
4. func calls and return exps
5. test conditions are int/bool
Command line flags “-a” and
“-s” (5 marks)

Symbol Ttable:
1. Hash table
2. Simple variables
3. Array variables
4. Functions/Blocks
- entry/exit
5. Error: undefined/redefined vars

Comments

- Show key-value pairs in different scopes for
different kinds of declarations:
int x;
bool bbb[10];
void foo(void) { };
- Show symbol table at entry/exit for gcd.cm
- Use “z” without a declaration and declare
“y” twice within the same scope.
Type-Checking:
1. void main(void) {
1. array index must be int.
int a[2]; int x;
2. check two sides of an assignment.
a[x] = 1;
3. check operands of binary/unary.
a[foo()] = 2; // assuming void foo()
operations.
}
4. check function defs/calls in terms of
2. void main(void) {
parameters and return types.
int x;
5. check test conditions for if- and whilex = foo();
statements (either int or bool).
}
3. int fun(int fff ) {
int x; int y;
___________________________________
x = x * 2 + 1;
5. void main(void) {
y = x + foo();
int x;
}
if( x ) output(foo());
4. void funtwo(void) {
if(foo()) output(x, foo());
int x;
}
x = 2;
return x;
}

